
services:
  # RabbitMQ cho Tiki
  tiki_rabbitmq:
    image: rabbitmq:3-management
    container_name: tiki_rabbitmq
    hostname: tiki_rabbitmq
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    volumes:
      - tiki_rabbitmq_data:/var/lib/rabbitmq
    networks:
      - tiki_network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Container để tạo queue
  queue_setup:
    image: rabbitmq:3-management
    container_name: tiki_queue_setup
    depends_on:
      tiki_rabbitmq:
        condition: service_healthy
    networks:
      - tiki_network
    command: >
      /bin/bash -c "
        sleep 10 &&
        rabbitmqadmin --host=tiki_rabbitmq --user=admin --password=admin declare queue name=tiki_product_queue durable=true &&
        echo 'Queue tiki_product_queue created successfully'
      "

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5

  airflow-init:
    image: apache/airflow:2.6.3-python3.10
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./scripts:/opt/airflow/scripts
    entrypoint: /bin/sh
    command:
      - -c
      - |
        airflow db init
        airflow users create \
          --username admin \
          --firstname FIRST_NAME \
          --lastname LAST_NAME \
          --role Admin \
          --email admin@example.com \
          --password admin

  webserver:
    image: apache/airflow:2.6.3-python3.10
    restart: always
    depends_on:
      - postgres
      - airflow-init
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__WEBSERVER__SECRET_KEY=temporary_secret_key_for_dev
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./scripts:/opt/airflow/scripts
    ports:
      - "8080:8080"
    command: webserver
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  scheduler:
    image: apache/airflow:2.6.3-python3.10
    restart: always
    depends_on:
      - postgres
      - airflow-init
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./scripts:/opt/airflow/scripts
    command: scheduler

volumes:
  tiki_rabbitmq_data:
  postgres-db-volume:
  
networks:
  tiki_network:
    driver: bridge